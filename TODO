1. [DONE] Implement some entity dependency code; see p.69 of IGES spec.
For example, every entity added to a Composite Curve should
have a Physical Dependency. In turn any Composite Curve
acting as a Curve on Surface is dependent on that
Curve on Surface (E142).

2. In future if someone wants to render curves etc, it makes
   little sense to let the user implement the interpolations.
   Implement interpolation routines which return an entire
   point set for each curve or surface and let the specific
   IGES entity calculate the point set based on an error
   parameter specified by the user (default: IGES minResolution).

3. Surface of Revolution:
    + ensure Axis is a LINE entity

4. [FIXED] [URGENT] Bug in IGES_POINT; 'p0 = p1 - p2' returns the wrong result

5. To load Molex model 473460001.igs support is required for entities:
    + Type 104: Conic Arc
    + Type 186: Manifold Solid B-REP
    + Type 502: Vertex List
    + Type 504: Edge List
    + Type 508: Loop
    + Type 510: Face
    + Type 514: Shell

6. [BUG] A NURBS curve must not scale its control points if it is
   a curve on a parametric surface (a parent entity is a BPTR of
   an Entity 142: Curve on Parametric Surface). Note than in other
   cases a NURBS curve may have its control points scaled - for
   example when it is a curve used as a generatrix for a surface
   of revolution. As an ad-hoc remedy we may simply refuse to scale
   NURBS curves; this would work in most cases since these curves
   are used almost exclusively as children of a BPTR entity.
   Fixing the behavior may involve some refactoring of the load code
   to ensure that any scaling is performed after all associations
   have been established; this will ensure that ancestors can be
   correctly traversed.
